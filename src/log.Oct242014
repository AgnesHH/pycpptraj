
Error compiling Cython file:
------------------------------------------------------------
...
# distutils: language = c++

from libc.stdlib cimport malloc
from libcpp.vector cimport vector
from libcpp.string cimport string
from arg_wrapper cimport wrap_argv
^
------------------------------------------------------------

Cpptraj_py.pyx:6:0: 'arg_wrapper.pxd' not found

Error compiling Cython file:
------------------------------------------------------------
...
# distutils: language = c++

from libc.stdlib cimport malloc
from libcpp.vector cimport vector
from libcpp.string cimport string
from arg_wrapper cimport wrap_argv
                        ^
------------------------------------------------------------

Cpptraj_py.pyx:6:25: Name 'wrap_argv' not declared in module 'arg_wrapper'
warning: Cpptraj_py.pyx:54:15: local variable 'c_argv' referenced before assignment
warning: Cpptraj_py.pyx:55:53: local variable 'c_argv' referenced before assignment

Error compiling Cython file:
------------------------------------------------------------
...
        self.ptraj_ptr.Intro()

    def RunCpptraj(self, args):
        cdef char **c_argv
        #return **c_argv from "args" list
        c_argv = wrap_argv(args)
                         ^
------------------------------------------------------------

Cpptraj_py.pyx:46:26: undeclared name not builtin: wrap_argv

Error compiling Cython file:
------------------------------------------------------------
...
        self.ptraj_ptr.Intro()

    def RunCpptraj(self, args):
        cdef char **c_argv
        #return **c_argv from "args" list
        c_argv = wrap_argv(args)
                         ^
------------------------------------------------------------

Cpptraj_py.pyx:46:26: Cannot convert Python object to 'char **'

Error compiling Cython file:
------------------------------------------------------------
...
        self.ptraj_ptr.Intro()

    def RunCpptraj(self, args):
        cdef char **c_argv
        #return **c_argv from "args" list
        c_argv = wrap_argv(args)
                         ^
------------------------------------------------------------

Cpptraj_py.pyx:46:26: Storing unsafe C derivative of temporary Python reference

Error compiling Cython file:
------------------------------------------------------------
...
    def Interactive(self):
        self.ptraj_ptr.Interactive()
    
    def AmbPDB(self, id1, id2, stringlist):
        cdef char **c_argv
        c_argv - wrap_argv(stringlist)
              ^
------------------------------------------------------------

Cpptraj_py.pyx:54:15: Cannot convert 'char **' to Python object
missing cimport in module 'arg_wrapper': Cpptraj_py.pyx
Compiling Cpptraj_py.pyx because it changed.
Cythonizing Cpptraj_py.pyx
Traceback (most recent call last):
  File "./setup.py", line 10, in <module>
    include_dirs=[np.get_include()])
  File "/mnt/raidc/haichit/Programs/Cython-0.21.1/build/lib.linux-x86_64-2.7/Cython/Build/Dependencies.py", line 840, in cythonize
    cythonize_one(*args[1:])
  File "/mnt/raidc/haichit/Programs/Cython-0.21.1/build/lib.linux-x86_64-2.7/Cython/Build/Dependencies.py", line 959, in cythonize_one
    raise CompileError(None, pyx_file)
Cython.Compiler.Errors.CompileError: Cpptraj_py.pyx
